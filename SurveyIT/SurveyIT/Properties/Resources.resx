<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Answer1" xml:space="preserve">
    <value>Odpowiedz powinna byc pusta</value>
  </data>
  <data name="AnswerIsEmpty" xml:space="preserve">
    <value>Odpowiedz jest pusta</value>
  </data>
  <data name="AnswerWithoutContent" xml:space="preserve">
    <value>Odpowiedz nie zawiera tekstu</value>
  </data>
  <data name="AnswerWithoutQuestio" xml:space="preserve">
    <value>Odpowiedz nie ma przypisanego pytania</value>
  </data>
  <data name="AssignCorrect" xml:space="preserve">
    <value>Przypisanie poprawne</value>
  </data>
  <data name="ChangedName" xml:space="preserve">
    <value>Zmiana nazwy powiodła sie</value>
  </data>
  <data name="CorrectDataValidation" xml:space="preserve">
    <value>Poprawna walidacja daty</value>
  </data>
  <data name="CorrectValidation" xml:space="preserve">
    <value>Walidacja poprawna</value>
  </data>
  <data name="CreateSurvey" xml:space="preserve">
    <value>Pomyslnie stworzono ankiete</value>
  </data>
  <data name="DataCorrect" xml:space="preserve">
    <value>Wszystkie dane są poprawne</value>
  </data>
  <data name="EmailIsUsed" xml:space="preserve">
    <value>Ten adres e-mail jest już przypisany do innego konta</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Błąd</value>
  </data>
  <data name="ErrorDisplay" xml:space="preserve">
    <value>Błąd wyswietlania</value>
  </data>
  <data name="ErrorSend" xml:space="preserve">
    <value>Blad wysylania</value>
  </data>
  <data name="ErrorValidation" xml:space="preserve">
    <value>Błąd walidacji</value>
  </data>
  <data name="ErrorValidationAnswers" xml:space="preserve">
    <value>Bledna walidacja odpowiedzi</value>
  </data>
  <data name="FillSurvey" xml:space="preserve">
    <value>Pomyslnie zapisano ankiete</value>
  </data>
  <data name="GroupAdded" xml:space="preserve">
    <value>Pomyslnie dodano grupe</value>
  </data>
  <data name="GroupDeleted" xml:space="preserve">
    <value>Usunieto grupe</value>
  </data>
  <data name="GroupNameUsed" xml:space="preserve">
    <value>Grupa o takiej nazwie istnieje</value>
  </data>
  <data name="GroupNotExist" xml:space="preserve">
    <value>Grupa nie istnieje</value>
  </data>
  <data name="LoginIsUsed" xml:space="preserve">
    <value>Ten login jest zajęty</value>
  </data>
  <data name="NoDataExist" xml:space="preserve">
    <value>Nie wszystkie obiekty istnieja</value>
  </data>
  <data name="NoDataToAssign" xml:space="preserve">
    <value>Brak obiektow do przypisania</value>
  </data>
  <data name="NoMail" xml:space="preserve">
    <value>Nie podano maila</value>
  </data>
  <data name="NotValidData1" xml:space="preserve">
    <value>Data rozpoczecia jest wieksza niz data zakonczenia</value>
  </data>
  <data name="NotValidData2" xml:space="preserve">
    <value>Data rozpoczecia musi byc wieksza badz od aktualnej</value>
  </data>
  <data name="NotValidName" xml:space="preserve">
    <value>Nazwa powinna zaczynać się od wielkiej litery</value>
  </data>
  <data name="Question1" xml:space="preserve">
    <value>Pytanie nie zawiera odpowiedzi</value>
  </data>
  <data name="Question2" xml:space="preserve">
    <value>Pytanie nie ma tresci</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Wyslano</value>
  </data>
  <data name="ShortGroupName" xml:space="preserve">
    <value>Za krótka nazwa</value>
  </data>
  <data name="ShortPass" xml:space="preserve">
    <value>Hasło musi zawierać min 6 znakow</value>
  </data>
  <data name="SurveyNameUsed" xml:space="preserve">
    <value>Ankieta o takiej nazwie juz istnieje</value>
  </data>
  <data name="SurveyNotExist" xml:space="preserve">
    <value>Taka ankieta nie istnieje</value>
  </data>
  <data name="SurveyWithoutQuestions" xml:space="preserve">
    <value>Ankieta nie zawiera pytan</value>
  </data>
  <data name="UnAssignCorrect" xml:space="preserve">
    <value>Odprzypisanie poprawne</value>
  </data>
  <data name="UpdateNameError" xml:space="preserve">
    <value>Błąd podczas update'owania danych użytkownika</value>
  </data>
  <data name="UserNotExist" xml:space="preserve">
    <value>Nie zidentyfikowano uzytkownika</value>
  </data>
</root>